name: Link Checker for Sphinx Documentation
# Trigger the workflow on push to main branch or pull request to main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

jobs:
  link-check:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt  
          echo "Dependencies installed."

      # Run Sphinx linkcheck to check for broken URLs
      - name: Run Sphinx linkcheck
        run: |
          cd docs
          sphinx-build -b linkcheck source _build/linkcheck || true # link from source docs to be checked
          cat _build/linkcheck/output.txt  # Display the full output of the linkcheck
          grep "broken" _build/linkcheck/output.txt > broken_links.txt  # Search for 'broken' links in the output

      # Separate step to check for broken links
      - name: Check for broken links
        run: |
          if [ -s broken_links.txt ]; then  # If broken_links.txt is not empty (contains broken links)
            echo "Broken links found:"
            cat broken_links.txt  # Display the broken links
            exit 1  # Fail the workflow
          else
            echo "No broken links found."  # No broken links, proceed
          fi
